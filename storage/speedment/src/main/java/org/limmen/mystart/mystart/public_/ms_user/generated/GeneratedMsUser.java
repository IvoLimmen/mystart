package org.limmen.mystart.mystart.public_.ms_user.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;
import org.limmen.mystart.mystart.public_.ms_user.MsUser;

import java.util.Optional;

/**
 * The generated base for the {@link
 * org.limmen.mystart.mystart.public_.ms_user.MsUser}-interface representing
 * entities of the {@code ms_user}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedMsUser {
    
    /**
     * This Field corresponds to the {@link MsUser} field that can be obtained
     * using the {@link MsUser#getId()} method.
     */
    IntField<MsUser, Integer> ID = IntField.create(
        Identifier.ID,
        MsUser::getId,
        MsUser::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link MsUser} field that can be obtained
     * using the {@link MsUser#getEmail()} method.
     */
    StringField<MsUser, String> EMAIL = StringField.create(
        Identifier.EMAIL,
        o -> OptionalUtil.unwrap(o.getEmail()),
        MsUser::setEmail,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link MsUser} field that can be obtained
     * using the {@link MsUser#getPassword()} method.
     */
    StringField<MsUser, String> PASSWORD = StringField.create(
        Identifier.PASSWORD,
        o -> OptionalUtil.unwrap(o.getPassword()),
        MsUser::setPassword,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this MsUser. The id field corresponds to the database
     * column mystart.public.ms_user.id.
     * 
     * @return the id of this MsUser
     */
    int getId();
    
    /**
     * Returns the email of this MsUser. The email field corresponds to the
     * database column mystart.public.ms_user.email.
     * 
     * @return the email of this MsUser
     */
    Optional<String> getEmail();
    
    /**
     * Returns the password of this MsUser. The password field corresponds to
     * the database column mystart.public.ms_user.password.
     * 
     * @return the password of this MsUser
     */
    Optional<String> getPassword();
    
    /**
     * Sets the id of this MsUser. The id field corresponds to the database
     * column mystart.public.ms_user.id.
     * 
     * @param id to set of this MsUser
     * @return   this MsUser instance
     */
    MsUser setId(int id);
    
    /**
     * Sets the email of this MsUser. The email field corresponds to the
     * database column mystart.public.ms_user.email.
     * 
     * @param email to set of this MsUser
     * @return      this MsUser instance
     */
    MsUser setEmail(String email);
    
    /**
     * Sets the password of this MsUser. The password field corresponds to the
     * database column mystart.public.ms_user.password.
     * 
     * @param password to set of this MsUser
     * @return         this MsUser instance
     */
    MsUser setPassword(String password);
    
    enum Identifier implements ColumnIdentifier<MsUser> {
        
        ID       ("id"),
        EMAIL    ("email"),
        PASSWORD ("password");
        
        private final String columnId;
        private final TableIdentifier<MsUser> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "mystart";
        }
        
        @Override
        public String getSchemaId() {
            return "public";
        }
        
        @Override
        public String getTableId() {
            return "ms_user";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<MsUser> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}