package org.limmen.mystart.mystart.public_.ms_link.generated;

import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.sql.SqlPersistenceComponent;
import com.speedment.runtime.core.component.sql.SqlStreamSupplierComponent;
import com.speedment.runtime.core.exception.SpeedmentException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.annotation.Generated;
import org.limmen.mystart.mystart.public_.ms_link.MsLink;
import org.limmen.mystart.mystart.public_.ms_link.MsLinkImpl;
import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.internal.util.sql.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * org.limmen.mystart.mystart.public_.ms_link.MsLink} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedMsLinkSqlAdapter {
    
    private final TableIdentifier<MsLink> tableIdentifier;
    
    protected GeneratedMsLinkSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("mystart", "public", "ms_link");
    }
    
    @ExecuteBefore(RESOLVED)
    void installMethodName(SqlStreamSupplierComponent streamSupplierComponent, SqlPersistenceComponent persistenceComponent) {
        streamSupplierComponent.install(tableIdentifier, this::apply);
        persistenceComponent.install(tableIdentifier);
    }
    
    protected MsLink apply(ResultSet resultSet) throws SpeedmentException {
        final MsLink entity = createEntity();
        try {
            entity.setId(             resultSet.getInt(1)         );
            entity.setUserId(         getInt(resultSet, 2)        );
            entity.setDescription(    getString(resultSet, 3)     );
            entity.setSource(         getString(resultSet, 4)     );
            entity.setTitle(          getString(resultSet, 5)     );
            entity.setUrl(            getString(resultSet, 6)     );
            entity.setHost(           getString(resultSet, 7)     );
            entity.setLabels(         getString(resultSet, 8)     );
            entity.setPrivateNetwork( getBoolean(resultSet, 9)    );
            entity.setLastVisit(      getTimestamp(resultSet, 10) );
            entity.setCreationDate(   getTimestamp(resultSet, 11) );
        } catch (final SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    protected MsLinkImpl createEntity() {
        return new MsLinkImpl();
    }
}